server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: uber-clone-backend
  profiles:
    active: docker
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/uber_clone}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  mail:
    host: ${SPRING_MAIL_HOST:smtp.gmail.com}
    port: ${SPRING_MAIL_PORT:587}
    username: ${SPRING_MAIL_USERNAME:}
    password: ${SPRING_MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:default_jwt_secret_for_local_development_only_change_in_production}
  expiration-ms: ${JWT_EXPIRATION_MS:86400000}

# Stripe Configuration
stripe:
  secret:
    key: ${STRIPE_SECRET_KEY:sk_test_placeholder}
  publishable:
    key: ${STRIPE_PUBLISHABLE_KEY:pk_test_placeholder}

# Redis Configuration
redis:
  host: ${REDIS_HOST:redis}
  port: ${REDIS_PORT:6379}
  password: ${REDIS_PASSWORD:}

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001,http://localhost:8080}

# ML Service Configuration
ml:
  service:
    url: ${ML_SERVICE_URL:http://ml-service:8000}
    enabled: ${ML_SERVICE_ENABLED:false}

# Google Maps API
google:
  maps:
    api-key: ${GOOGLE_MAPS_API_KEY:}

# WebSocket Configuration
spring:
  websocket:
    max-text-message-size: 8192
    max-binary-message-size: 8192

# Logging Configuration
logging:
  level:
    com.uberclone.backend: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
